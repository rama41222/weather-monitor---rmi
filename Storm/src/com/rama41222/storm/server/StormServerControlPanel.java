/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rama41222.storm.server;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import javax.swing.BorderFactory;

/**
 *
 * @author Rama41222
 */
public class StormServerControlPanel extends javax.swing.JFrame implements WritableGUI {

    private int posX = 0, posY = 0;

    /**
     * Creates new form StormServerControlPanel
     */
    public StormServerControlPanel() {
        initComponents();
        // Enabling the mouse drag functionality to the client app draggable panel
        draggablePanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                posX = e.getX();
                posY = e.getY();
            }
        });

        draggablePanel.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent evt) {
                setLocation(evt.getXOnScreen() - posX, evt.getYOnScreen() - posY);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        draggablePanel = new javax.swing.JPanel();
        startBtn = new javax.swing.JButton();
        serverPortTxt = new javax.swing.JTextField();
        sensorsTxt = new javax.swing.JTextField();
        clientsTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rmiPortTxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        loggerBoard = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        draggablePanel.setBackground(new java.awt.Color(12, 35, 49));

        startBtn.setBackground(new java.awt.Color(12, 35, 49));
        startBtn.setForeground(new java.awt.Color(255, 255, 255));
        startBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rama41222/storm/server/icons/ic_play_circle_outline_white_36dp_1x.png"))); // NOI18N
        startBtn.setText("Start Server");
        startBtn.setBorderPainted(false);
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        serverPortTxt.setBackground(new java.awt.Color(38, 50, 56));
        serverPortTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        serverPortTxt.setForeground(new java.awt.Color(255, 255, 255));
        serverPortTxt.setText("9001");
        serverPortTxt.setToolTipText("Server Port");
        serverPortTxt.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        serverPortTxt.setMargin(new java.awt.Insets(4, 4, 4, 4));
        serverPortTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serverPortTxtMouseClicked(evt);
            }
        });

        sensorsTxt.setBackground(new java.awt.Color(38, 50, 56));
        sensorsTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sensorsTxt.setForeground(new java.awt.Color(255, 255, 255));
        sensorsTxt.setText("0");
        sensorsTxt.setToolTipText("Server Port");
        sensorsTxt.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        sensorsTxt.setMargin(new java.awt.Insets(4, 4, 4, 4));
        sensorsTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sensorsTxtMouseClicked(evt);
            }
        });

        clientsTxt.setBackground(new java.awt.Color(38, 50, 56));
        clientsTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clientsTxt.setForeground(new java.awt.Color(255, 255, 255));
        clientsTxt.setText("0");
        clientsTxt.setToolTipText("Server Port");
        clientsTxt.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        clientsTxt.setMargin(new java.awt.Insets(4, 4, 4, 4));
        clientsTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTxtMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sensor #: ");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Clients #: ");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sensor Port");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RMI Interface");

        rmiPortTxt.setBackground(new java.awt.Color(38, 50, 56));
        rmiPortTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rmiPortTxt.setForeground(new java.awt.Color(255, 255, 255));
        rmiPortTxt.setText("1099");
        rmiPortTxt.setToolTipText("Rmi Port");
        rmiPortTxt.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        rmiPortTxt.setMargin(new java.awt.Insets(4, 4, 4, 4));
        rmiPortTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rmiPortTxtMouseClicked(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(12, 35, 49));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rama41222/storm/server/icons/ic_close_white_36dp_1x.png"))); // NOI18N
        jButton2.setText("Close");
        jButton2.setToolTipText("Close the app");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout draggablePanelLayout = new javax.swing.GroupLayout(draggablePanel);
        draggablePanel.setLayout(draggablePanelLayout);
        draggablePanelLayout.setHorizontalGroup(
            draggablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(draggablePanelLayout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, draggablePanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sensorsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rmiPortTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serverPortTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        draggablePanelLayout.setVerticalGroup(
            draggablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, draggablePanelLayout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(draggablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(draggablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rmiPortTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(draggablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(serverPortTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(draggablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sensorsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(clientsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(10, 10, 10))
        );

        jTabbedPane2.setBackground(new java.awt.Color(12, 35, 49));
        jTabbedPane2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTabbedPane2.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(12, 35, 49));

        loggerBoard.setEditable(false);
        loggerBoard.setBackground(new java.awt.Color(38, 50, 56));
        loggerBoard.setColumns(20);
        loggerBoard.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        loggerBoard.setForeground(new java.awt.Color(255, 255, 255));
        loggerBoard.setLineWrap(true);
        loggerBoard.setRows(5);
        jScrollPane6.setViewportView(loggerBoard);

        jButton3.setBackground(new java.awt.Color(12, 35, 49));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rama41222/storm/server/icons/ic_clear_all_white_36dp_1x.png"))); // NOI18N
        jButton3.setText("Clear Logs");
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(12, 35, 49));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rama41222/storm/server/icons/ic_save_white_36dp_1x.png"))); // NOI18N
        jButton4.setText("Save Logs");
        jButton4.setBorderPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        jTabbedPane2.addTab("Server Log", jScrollPane1);

        jScrollPane2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTabbedPane2.addTab("Connected Sensors", jScrollPane2);

        jScrollPane3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTabbedPane2.addTab("Monitoring Stations", jScrollPane3);

        jScrollPane4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTabbedPane2.addTab("Quick Weather", jScrollPane4);

        jScrollPane5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTabbedPane2.addTab("About", jScrollPane5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(draggablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(draggablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        //Server is singleton therefore getting the intance
        StormServer x = StormServer._getInstance();
        //setting the delegate
        x.setDelegate(this);
        //setting the gui ports and rmi ports to the server
        x.setPORT(Integer.parseInt(serverPortTxt.getText()));
        x.setRMI_PORT(Integer.parseInt(rmiPortTxt.getText()));

        Thread rmiServerStartTask = new Thread() {
            @Override
            public void run() {
                try {
                    x.startRMIInterface();
                } catch (IOException ex) {
                    loggerBoard.append(ex.toString() + System.lineSeparator());
                }
            }
        };

        Thread socketServerStartTask = new Thread() {
            @Override
            public void run() {
                try {
                    x.startSocketServer();
                } catch (IOException ex) {
                    loggerBoard.append(ex.toString() + System.lineSeparator());
                }
            }
        };
        //starting both socket interface and rmi interface
        socketServerStartTask.start();
        rmiServerStartTask.start();
    }//GEN-LAST:event_startBtnActionPerformed

    private void serverPortTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serverPortTxtMouseClicked
        serverPortTxt.setText("");
    }//GEN-LAST:event_serverPortTxtMouseClicked

    private void sensorsTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sensorsTxtMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sensorsTxtMouseClicked

    private void clientsTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTxtMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_clientsTxtMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        loggerBoard.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void rmiPortTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rmiPortTxtMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rmiPortTxtMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StormServerControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StormServerControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clientsTxt;
    private javax.swing.JPanel draggablePanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea loggerBoard;
    private javax.swing.JTextField rmiPortTxt;
    private javax.swing.JTextField sensorsTxt;
    private javax.swing.JTextField serverPortTxt;
    private javax.swing.JButton startBtn;
    // End of variables declaration//GEN-END:variables

    /*
        implemented methods from WritableGUI interface which is used to update the gui whenever there's a value change
     */
    @Override
    public void writeLogs(String update) {
        loggerBoard.setText(update + System.lineSeparator() + loggerBoard.getText());
    }

    @Override
    public void updateSensorCount(int count) {
        sensorsTxt.setText(count + "");
    }

    @Override
    public void updateClientCount(int count) {
        clientsTxt.setText(count + "");
    }
}
